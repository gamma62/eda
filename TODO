--- some NOTES about bugs, plans, ideas ---

BUGS:
- alternative (symlink) HOME path for to abbreviate xterm title,
  new patterns for python parser, edaseq entries for mate-terminal,
  GNU and BSD makefiles and compiler settings
done

- session leader must be set in all cases, not only in ish buffer:
  in sh buffer does not work 'man --ascii -P cat eda'
fixed

- simple_parser() was limited to input lines with max.256 bytes; find results were not parsed;
fixed

- /usr/local/share found in edamacro in the release package, should be /usr/share
fixed

- with files having cr/lf lines there is a design level bug:
  insert actions after lineend will add characters between cr and lf
  thats bad; affected join_line, deleol, join_block and *_block
  design at last: lineending fix at read time ans set the line changed flag
done

- BackSpace, Ctrl-Up/Down,... over ssh are strange; robustness fix needed
  no cheat, 0x08, 0x7f act like BackSpace;
  the Ctrl-H becomes reserved (0x08) so search_cmd_macro() dropped, and
  Ctrl-F => search_word(), Ctrl-J => highlight_word();
  the dynamic mapping fixed: Ctrl-Up/Down,... can be sequence or fixed value;
  pushed by the FreeeBSD port
done

- ish does not work on FreeBSD
fixed

- tomatch and folding does not ignore comments and strings
  strings, continuation lines, escapes and comments by language...
postponed, strings and comments are deeply lang. dependent

---

FEATURE: FreeBSD port
  - compilation, compatibility changes (make, cc, shell scripts)
  - accept all backspace key variants
  - regexp compatibility
done

FEATURE: python error parser
  - python -m py_compile script ; pyflakes script ; pylint -E script
done

FEATURE: m1 command as 'more 1'
  - expanding filter blocks up and down
done

---

FEATURE: xml/html tag support
  - tomatch for tag tokens, block folding, etc
important, later

operation restricted to current selection block
  - like indent/unindent but only surrounding selection
  - replace, comment, uncomment, ...
maybe

FEATURE: support indentation based structured languages
  - like python
  - in general: folding, function name, ...
maybe

FEATURE: hashtab for the commands and keyboard inputs
  - first part ready: perfect hash (all keys found slot in first round)
  - second step: generate this during the build
  - or runtime with key-tester and set parameters in config
postponed, hashtab branch

--- oldies ---
