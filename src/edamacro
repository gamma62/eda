# System-wide configuration file
# do not edit, save a copy to ~/.eda/ instead

# macro file for eda with commented samples,
# see details about syntax and functions in edamacro(5)
#
#---sample
#KEY_NONE	macro_API
#	go_text
#	go_end
#	keypress_enter
#	type_text	[^G] : the buffer name
#	type_text	[$0] : the whole input
#	type_text	input fields [$1] [$2] [$3] [$4] [$5] [$6] [$7] [$8] [$9] end
#	shell_cmd	date +fw%V
#	switch_text_cmd
#.
#---end sample
#
# Notes:
# selection lines are filtered by external process the result shows up in *sh* buffer
# to overwrite the original selection lines from *sh* buffer use the function
#	over_select
#
# Some 'must have' macros
#
KEY_F1	help
#Description: show cmds.txt (if available) or use the function
#	add_file ~/.eda/cmds.txt
	show_commands
.
KEY_S_F1	manual
#Description: show the eda manual
	shell_cmd man -P cat eda
	go_top
.
KEY_NONE	man
#Description: open manual page
	shell_cmd man -P cat $0
	go_top
.
KEY_NONE	ts
#Description: tabsize setting
	set tabsize $1
.
#
# VCS interface (examples)
#
KEY_NONE	svn
#Description: alias to run any Subversion command
	vcstool svn $0
.
KEY_NONE	hg
#Description: alias to run any Mercurial command
	vcstool hg $0
.
KEY_NONE	git
#Description: alias to run any Git command
	vcstool git $0
.
KEY_NONE	hginfo
#Description: run hg commands to get info: summary, diff stat, status
	vcstool hg sum
	vcstool hg diff --stat
	vcstool hg status
.
KEY_NONE	hglog
#Description: run hg log
	vcstool hg log -G -l 50
	go_top
.
KEY_NONE	gitinfo
#Description: run git commands to get base info
	vcstool git log --oneline -1
	vcstool git diff --stat
	vcstool git status -b -s
.
KEY_NONE	gitlog
#Description: run git log, current branch only
	vcstool git log --pretty=tformat:'%cd%n_%h_%ce_|_%s' --abbrev-commit --date=short -50
	go_top
.
#
# Tools
#
KEY_NONE	py
#Description: settings for python
	set indent space 4
	set find_opts . -type f ( -name '*.py' ) -exec egrep -nH -w
.
KEY_NONE	pyc
#Description: python syntax checker example
	shell_cmd check_python.sh ^G
.
KEY_NONE	xmlindent
#Description: reindent xml text
	select_all
	filter_cmd xmllint --format -
	over_select
.
#
# X11 primary and clipboard I/O -- this sample is based on xsel
#
KEY_NONE	<p
#Description: insert lines from X11 PRIMARY selection
	go_text
	go_end
	keypress_enter
	reset_select
	line_select
	filter_cmd xsel --output --primary
	over_select
.
KEY_NONE	<c
#Description: insert lines from X11 CLIPBOARD -- an alternative to shift-control-v
	go_text
	go_end
	keypress_enter
	reset_select
	line_select
	filter_cmd xsel --output --clipboard
	over_select
.
KEY_NONE	>p
#Description: copy visible selection lines to X11 PRIMARY selection
	filter_cmd xsel --input --primary
	drop_file
.
KEY_NONE	>c
#Description: copy visible selection lines to X11 CLIPBOARD -- an alternative to shift-control-c
	filter_cmd xsel --input --clipboard
	drop_file
.
###
